---
layout: post
title:  "Snapshot"
date:   2018-11-03 13:44:44 +0300
categories: kvm
tags: kvm
---

# Snapshot
Snapshot - логическую копию исходного тома
 При использовании технологии COW эта логическая копия исходных данных занимает меньший, чем сами данные, объем дискового пространства. 
Главная идея copy-on-write — при копировании областей данных создавать реальную копию только когда ОС обращается к этим данным с целью записи.



Утилита cowloop позволяет реализовать COW (copy-on-write) режим работы с диском.
Все производимые операции записи на диск будут осуществляется в специальный файл (сowfile) оставляя исходный диск в первоначальном состоянии.
При этом есть возможность слияния сowfile с исходным диском. Также можно одновременно использовать несколько сowfile.


Упрощёно получается, когда мы делаем snapshot, то получается, что мы новые данные пишем в отдельное место, а оригинал диска не изменяется
В случае LVM при попытке модификации файла на томе-оригинале неизмененный файл сначала сохраняется на томе-снимке, а уж затем модифицируется.
Получаем изменённый файл на томе оригинале, а неизменный файл в snapshot.

[http://blog.aboutnetapp.ru/archives/39](http://blog.aboutnetapp.ru/archives/39)
[http://habrahabr.ru/company/netapp/blog/112367/](http://habrahabr.ru/company/netapp/blog/112367/)
[http://unixforum.org/index.php?showtopic=99491&st=0](http://unixforum.org/index.php?showtopic=99491&st=0)

NetApp  отличается от COW, тем что COW - копирует блок и изменяет исходный блок (все метаданные тоже изменяются) 
Минус Как вы видите из описания выше, даже само наличие включенного механизма снэпшотов для тома превращает одну операцию записи для системы хранения в три (чтение исходного содержимого, запись исходного содержимого на новое место, запись измененного содержимого на старое место)

NetApp  - копирует данные из блока и изменяет и изменяет копию (на одно действие меньше)

[http://savepearlharbor.com/?p=183384](http://savepearlharbor.com/?p=183384)
[http://www.nstor.ru/ru/catalog/76/7521.html](http://www.nstor.ru/ru/catalog/76/7521.html)

Наконец, LVM поддерживает технологию Snapshots. Эта технология крайне напоминает технологию COW (Copy-on-Write, копирования при записи),
 используемую в linux при создании новых процессов. При создании Snapshot'а логического тома все логические "клеточки" созданного тома-снапшота ссылаются
 на те же самые физические "клеточки" блочных устройств, что и «клеточки» исходного тома. 
Это означает, что одни и те же данные доступны по двум логическим именам. Это же, кстати, делает процесс создания снапшота любого размера практически мгновенным.
 При изменении одной из "копий" данных логические ячейки разносятся. 
Это позволяет двум логическим томам использовать совместно неизменяемую часть данных, поддерживая независимо только различающуюся часть


Сферы применения снапшотов могут быть самыми разнообразными. Например, резервное копирование базы данных.
Если не использовать LVM — базу данных необходимо останавливать, копировать ее файлы куда-нибудь для последующего резервного копирования,
 а затем запускать ее заново. То есть делать это придется в нерабочее время. 
С LVM все проще — следует сделать снимок раздела с файлами базы данных и уже можно начинать делать резервную копию. Остановка базы данных не нужна.

Самая интересная особенность LVM при работе со снимками — это то, что снимок может занимать меньше дискового пространства, чем оригинал.
 Для этого используется режим Copy-on-Write, при котором реальное использование дискового пространства начинается только при изменении данных на томе-оригинале. 
То есть при попытке модификации файла на томе-оригинале неизмененный файл сначала сохраняется на томе-снимке, а уж затем модифицируется.




[http://blog.vadmin.ru/2008/12/vmware-vi.html](http://blog.vadmin.ru/2008/12/vmware-vi.html)

Типы снапшотов
[http://www.computerra.ru/cio/1602](http://www.computerra.ru/cio/1602)



счас попробую вам объяснить в кратце как работает снепшот:

у вас есть блоки на блочном устройстве, некоторые содержат информацию, некоторые нет:
Код
--[0]--[X]--[0]--[0]--[X]--[X]--

что-то типа того.
юзер что-то записал, инфа изменилась:
Код
--[0]--[X]--[0]--[X]--[X]--[X]--

после этого вы снимаете снепшот. картина не меняется никак, информация о том, когда снялся снепшот записывается отдельно, нас это сейчас не интересует.
после снятного снепшота юзер опять что-то меняет, но, т.к. мы сняли снепшот оригинальная информация не перезаписывается, как это было раньше, вместо этого новая информация записывается рядом:
Код
--[0]--[X]--[0](X)--[X]--[X]--[X]--

теперь, когда мы обращается к ФС мы получаем информацию, с учетом изменений в скобочках, а когда обращаемся к снепшоту - информацию без учета изменений в скобочках.
таким образом - снепоты неотделимы от файловой системы, с которой они были сняты. ну, точнее отделить может и можно, на работать они не будут, т.к. всей информации они не содержат. 




















KVM и LVM снапшот



Cнапшот содержит «устаревшие» данные — поэтому merge и является откатом.




######################################################################################################
1. Создаём снапшот

# lvcreate -L 1GB -s -n tecmint_datas_snap /dev/vg_tecmint_extra/tecmint_datas        

OR

# lvcreate --size 1G --snapshot --name tecmint_datas_snap /dev/vg_tecmint_extra/tecmint_datas



В нашем случае создаем снапшот для host_centos
 sync
lvcreate --size 10G --snapshot --name centos_snap  /dev/vg_kvmhost1/lv_host_centos


2. обновляем

3. Если не работает, то останавливаем машину и merge делаем между lvm разделом и snapshoot (Если мы удалили с оригинального раздела ряд файлов, и при этом что-то пошло не так, то можно вернуть всё в зад следующей командой)
lvconvert --merge /dev/vg_kvmhost1/centos_snap

Но перед этим надо отмонтировать оригинальный раздел.
Let me revert the snapshot to original volume to restore the deleted contents.

Потом активировать раздел и примонтировать его
Activate the volume and mount it .
lvchange -ay /dev/vg_kvmhost1/lv_host_centos
mount -t ext4  /dev/uavg/vol1  /vol1 (мне монтировать не надо, так как у нас виртуальная машина)

4. Если всё прошло хорошо, то просто удаляем снапшот
lvremove /dev/vg_kvmhost1/centos_snap
######################################################################################################

[http://xgu.ru/wiki/LVM#.D0.A0.D0.B5.D0.B7.D0.B5.D1.80.D0.B2.D0.BD.D0.BE.D0.B5_.D0.BA.D0.BE.D0.BF.D0.B8.D1.80.D0.BE.D0.B2.D0.B0.D0.BD.D0.B8.D0.B5_.D0.BF.D1.80.D0.B8_.D0.BF.D0.BE.D0.BC.D0.BE.D1.89.D0.B8_.22.D1.81.D0.BD.D0.B0.D0.BF.D1.88.D0.BE.D1.82.D0.BE.D0.B2.22](http://xgu.ru/wiki/LVM#.D0.A0.D0.B5.D0.B7.D0.B5.D1.80.D0.B2.D0.BD.D0.BE.D0.B5_.D0.BA.D0.BE.D0.BF.D0.B8.D1.80.D0.BE.D0.B2.D0.B0.D0.BD.D0.B8.D0.B5_.D0.BF.D1.80.D0.B8_.D0.BF.D0.BE.D0.BC.D0.BE.D1.89.D0.B8_.22.D1.81.D0.BD.D0.B0.D0.BF.D1.88.D0.BE.D1.82.D0.BE.D0.B2.22)
[http://www.tecmint.com/take-snapshot-of-logical-volume-and-restore-in-lvm/](http://www.tecmint.com/take-snapshot-of-logical-volume-and-restore-in-lvm/)
[http://manpages.ylsoftware.com/ru/lvconvert.8.html](http://manpages.ylsoftware.com/ru/lvconvert.8.html)
[http://blog.tataranovich.com/2012/05/lvm.html](http://blog.tataranovich.com/2012/05/lvm.html)


######################################################################################################
Чтобы сделать копию данных, необходимо подмонтировать snapshoot, скопировать оттуда данные tar,dd или другим
способом, а после этого можно размонтировать и удалить.
######################################################################################################

Делаем первый снимок

		    #создаем логический том-снимок с именем 'snap' из исходного логического тома 'test'
lvcreate -s -L 2G -n snap /dev/test-volume/test

С помощью lvdisplay можно получить специальную информацию, например, о размере CoW и использовании CoW:
Листинг 15. Насколько велико и как используется ваше «стадо коров»?

lvdisplay /dev/vg00/snap

  --- Logical volume ---
  LV Name                /dev/test-volume/snap
  VG Name                vg00
  LV UUID                QHVJYh-PR3s-A4SG-s4Aa-MyWN-Ra7a-HL47KL
  LV Write Access        read/write
  LV snapshot status     active destination for /dev/test-volume/test
  LV Status              available
  # open                 0
  LV Size                4.00 GB
  Current LE             1024
  COW-table size         2.00 GB
  COW-table LE           512
  Allocated to snapshot  54.16%
  Snapshot chunk size    8.00 KB
  Segments               1
  Allocation             inherit
  Read ahead sectors     0
  Block device           254:5

Заметим, что в листинге 15 имеется CoW размером 2 ГБ, 54.16% которого уже используется.

Для всех действий снимок представляет собой копию оригинального логического тома. Он может быть смонтирован, если в нем имеется файловая система:

#монтирование тома со снимком
mount -o ro /dev/test-volume/snap /mnt/snap

Флаг ro в этом фрагменте кода служит для того, чтобы смонтировать снимок в режиме только для чтения. Режим «только для чтения» можно также задать на уровне LVM, добавив -p r в команду lvcreate.

После того как файловая система смонтирована, вы можете продолжить работу с резервной копией с использованием tar, rsyncи любых других утилит. Если логический том не содержит файловой системы или если необходима копия неформатированных данных, можно также применить dd непосредственно на узле устройства.

После завершения процесса, когда снимок больше не нужен, просто размонтируйте и удалите его, используя lvremove:

#удаление снимка
lvremove /dev/test-volume/snap





 #создаем логический том-снимок с именем 'snap' из исходного логического тома 'test'
lvcreate -s -L 2G -n snap /dev/test-volume/test









Переезд
 <source dev='/dev/vg_kvmhost1/lv_win2003'/>
win2003
lvcreate --size 10G --snapshot --name centos_snap  /dev/vg_kvmhost1/lv_host_centos
qemu-img convert -O qcow2 /dev/vg_kvmhost1/centos_snap /home/garry/host_centos.img
lvremote centos_snap


<source dev='/dev/vg_kvmhost1/lv_host_centos'/
host-centos
lvcreate --size 10G --snapshot --name centos_snap  /dev/vg_kvmhost1/lv_host_centos
qemu-img convert -O qcow2 /dev/vg_kvmhost1/centos_snap /home/garry/host_centos.img
lvremote centos_snap

Копируем xml файл и host_centos.img на другую машину




<source dev='/dev/vg_kvmhost1/lv_centos7_py'/>
centos7_py




