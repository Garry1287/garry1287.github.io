---
layout: post
title:  "cisco-sfp"
date:   2018-01-05 08:55:56 +0300
categories: cisco-sfp
tags: cisco
---

# cisco-sfp


Столкнулся недавно с проблемой. А суть ее такова: есть коммутатор Cisco 3560E и в нем есть модуль для подключения SFP. Если вставить родные SFP от Cisco, то все работает; если же подключить SFP модуль стороннего производителя, тогда этот модуль не будет принимать коммутатор.

При подключении SFP модуля стороннего производителя в логи коммутатор пишет вот что:

00:40:35: %GBIC_SECURITY_CRYPT-4-VN_DATA_CRC_ERROR: GBIC in port Gi0/25 has bad crc

00:40:35: %PHY-4-UNSUPPORTED_TRANSCEIVER: Unsupported transceiver found in Gi0/25

00:40:40: %GBIC_SECURITY_CRYPT-4-VN_DATA_CRC_ERROR: GBIC in port Gi0/26 has bad crc

00:40:40: %PHY-4-UNSUPPORTED_TRANSCEIVER: Unsupported transceiver found in Gi0/26

Решить эту проблему достаточно просто. Заходим на коммутатор и «заставляем» коммутатор принять наши модули стороннего производителя при помощи команд:


service unsupported-transceiver

no errdisable detect cause gbic-invalid

no errdisable detect cause sfp-config-mismatch



Для начала ЧТО ТАКОЕ ДДОС?
Так вот Ddos - это атака на компьютерную систему с целью довести её до отказа, то есть, до такого состояния, что правомочные пользователи системы не могут получить доступ к предоставляемым системой ресурсам (серверам, сервисам), либо этот доступ затруднён. Отказ «вражеской» системы может быть как самоцелью (например, сделать недоступным популярный сайт), так и одним из шагов к захвату контроля над системой (если во внештатной ситуации ПО выдаёт какую-либо критическую информацию — например, версию, часть программного кода и т. д.).
Если атака выполняется одновременно с большого числа компьютеров, говорят о DDoS-атаке (от англ. Distributed Denial of Service, распределённая атака типа «отказ в обслуживании»). В некоторых случаях к фактической DDoS-атаке приводит непреднамеренное действие, например, размещение на популярном интернет-ресурсе ссылки на сайт, размещённый на не очень производительном сервере (слэшдот-эффект). Большой наплыв пользователей приводит к превышению допустимой нагрузки на сервер и, следовательно, отказу в обслуживании части из них.
Пижено с вики..



Ну так вот, цены на наши услуги:


1 час - 10$
Сутки - 70$

Пройдем любую проверку


Контакты:


ICQ: 590-020-474






DDOS Услуги/Ddos service/ddos attack
DDOS Услуги/Ddos сервис / Ddos service/ddos attack
DDOS СЕРВИС

Заказать ДДОС атаку. Отключить сайт конкурента на любое время.
Надоел сайт конкурента ? Кто-то обидел ?
Закажите ддос атаку и отключите чужой сайт.
Мешают работать?
Хотим предложить вам наш DDoS сервис.

Работаем 24/7

Предлагаем хороший Ддос сервис .

поддерживаемые типы атак:
- icmp
- syn
- udp
- http
- data
Анонимность гарантирована!

Цена индивидуальна зависит от сложности, предполагаемого срока атаки и количества атакуемых проектов.

Цены:


1 час - 10$

Сутки - 50$



Способы оплаты:
принимаем только
WebMoney
WM-карты
yandex деньги


Клиентам есть хорошие скидки.

Делаю тест 5 минут

Контакты:
ICQ 90-72-71








[Ссылки доступны только зарегистрированным пользователям . Зарегайся,и увидешь ссылку]

Наши преимущества для ВАС:

- профессиональный сервис;
- гарантируем Вам анонимность;
- лучшее соотношение цены и качества на рынке DDoS услуг;
- индивидуальный подход;
- гибкая система скидок для постоянных клиентов и оптовых заказчиков;
- оснащены профессиональными приватными программами;
- беремся за проекты с анти-DDoS, за «тяжелые проекты»;
- можем работать на постоянной основе несколько url одновременно(в любой момент url можно поменять);
- предлагаем Вам качество проверено гарантом;
- делаем тест;

Досконально изучаем все тонкости Вашего заказа!

Ценовая политика:
от 5$ час
(индивидуальный подход к оптовым клиентам)

Связь/Support:
ICQ 513-955

[Ссылки доступны только зарегистрированным пользователям . Зарегайся,и увидешь ссылку]









yin.artfix.ru (78.46.50.59)



Наши преимущества для ВАС:

- профессиональный сервис;
- гарантируем Вам анонимность;
- лучшее соотношение цены и качества на рынке DDoS услуг;
- индивидуальный подход;
- гибкая система скидок для постоянных клиентов и оптовых заказчиков;
- оснащены профессиональными приватными программами;
- беремся за проекты с анти-DDoS, за «тяжелые проекты»;
- можем работать на постоянной основе несколько url одновременно(в любой момент url можно поменять);
- предлагаем Вам качество проверено гарантом;
- делаем тест;

Досконально изучаем все тонкости Вашего заказа!

Ценовая политика:
от 5$ час
(индивидуальный подход к оптовым клиентам)

Связь/Support:
ICQ 513-955

[http://forum.xakepok.su](http://forum.xakepok.su) [проверка пройдена]
DDOS Услуги Ddos сервис Ddos service ddos attack заказать Ддос заказать Ddos ддос сервис, услуги ддоса, наказать конкурента, где заказать ддос на 

Мы предоставляем SERVICE DDOS_KILL , который устранит, положит, отключит, уронит, закроет, приостановит сайт, сервер, др.ресурс, что это такое DDOS атаки :
DDOS (сокр. от англ. Distributed Denial of Service, Распределённый отказ от обслуживания) — изначально тип сетевой атаки, основанной на небезграничности ресурсов атакуемой службы, к которой организуется масса запросов, с которыми она заведомо не сможет справиться, и будет вынуждена отказать в обслуживанию , собственно, отсюда и название. Иногда DDOS применяется к аналогичным ситуациям в оффлайне.

    "Проще говоря, что такое DDOS? Это, к примеру, когда ведёшь разговор с кем-то, но тут подходит алкаш, и начинает громко нести бред. Говорить либо невозможно, либо очень сложно. Решение: зовёшь охрану, она скручивает синяка, и уводит. DDOS же отличается тем, что алкашей вбегает толпа многотысячная, и даже если позвать охрану, она банально не сумеет всех скрутить и увести. Наиболее же эффективная атака такого плана выполняется не тысячами набежавших алкашей а превращением в зомби уже имеющихся вокруг мирных юзеров. Они уже есть, уже ходят вокруг, уже оборудованы ртом — осталось включить их начать орать пациенту в ухо. Всем сразу и независимо от их желания, по команде"

Почему Вы выберите наш SERVICE Kill_DDOS ?

Потому что наш SERVICE DDOS_KILL :

• Без посредничества;
• Работаем профессиональными приватными программами;
• Беремся за проекты с анти-DDOS, за «тяжелые проекты»;
• Можем работать на постоянной основе несколько url одновременно(в любой момент url можно поменять) ;
• Индивидуальный подход к каждому клиенту(скидки, оплата );
• Анонимность
• При заказах на длительное время- скидки;
• Мониторинг атакуемого объекта;
• ДЕлАЕМ ТЕСТ (для крупных целей можем попросить протекцию или символическую плату)

Технические детали:
Боты 95% из стран СНГ, (Атаку нельзя будет остановить по средством блокирования заграничных IP). Ботов достаточно в любое время суток
Виды атак : HTTP (GET/POST), ICMP, SYN, UDP, DATA
(подбирается наиболее эффективный вид или используются несколько одновременно)

Ценовая политика:
стоимость зависит от цели и срока заказа
Минимальная цена 50$ в сутки.
Предусмотрена гибкая система скидок для постоянных
клиентов и оптовых заказчиков
Предусмотрена система MoneyBack (возврат денег)
Оплата может быть посуточная и почасовая.

К оплате принимаем:
WebMoney
YandexMoney
И еще некоторые системы.

Связь:
[IMG] ICQ: 419-906
[IMG] ICQ: 379-882
Jabber: ddos_kill@qip.ru










ipref из нашей сети, не ddos
Не супер большой, но достаточно, чтобы бабла у человека выгрести









Из литературы советую полностью прочитать журнал &#171;Спец Хакер выпуск №21&#187;. Весь этот выпуск посвящен DoS и DDoS атакам. Так же прочитайте статью на hackzona.ru &#171;Огород из DDoS-ботов&#187;. Обязательно посетите inattack.ru и прочитайте все статьи в разделах &#171;DDoS/Флуд&#187; и &#171;Ботнет&#187;. Так же советую в Интернете поискать все о таких понятиях как DoS, DDoS, Spoofing, флуд, переполнение буфера, черви и защита от всего этого.
Кстати, не надо путать понятии &#171;флуд&#187; и &#171;DoS&#187;. Флуд – это закидование пакетами ненужной информации, а DoS закидование пакетами неправильной информации. Это совсем разные вещи.
Прошу меня извинить, что не показал реальных практических примеров, не дал важных ссылок (хотя я вообще никаких ссылок не дал), не показал листингов. 













Введение в хакинг на низком уровне. Спуфинг IP - начальные сведения.
[ Хакерство в Интернете ]

Введение в хакинг на низком уровне. Спуфинг IP - начальные сведения.
Сегодняшний хакинг - нечто иное по сравнению с тем, что было 10 и даже 5 лет назад. Большое количество нового ПО, донельзя упрощающего работу пользователя, а также появление различных скриптовых языков, освоить которые под силу даже ребенку, превратили искусство взлома в детскую шалость. Теперь, чтобы что-то взломать, не нужно знать всех тонкостей сетевых протоколов, владеть низкоуровневыми языками программирования - ты заходишь на поисковик, вводишь имя уязвимого файла, и перед тобой список сайтов, которые ты можешь взломать за 5 минут. Взломав так один сайт, юные хулиганы - [скрипт]киддисы - считают себя хакерами; а их интеллектуальные возможности ограничиваются взломом тех жертв, на которых показывает палец google.com.
Возможно, ты относишься к числу таких (многие квалифицированные хакеры прошли через это), и я тебя не виню - напротив: хочу направить на верный путь, и, по возможности, вызвать у тебя интерес и стимул к изучению искусств хакинга на низком уровне. Ведь однажды тебе понадобится взломать какой-то конкретный сайт (допустим, даже тебя несправедливо забанил админ чата), но твоих знаний не хватит для этого, хоть ты и уверен, что неуязвимых систем не существует. И, лишь зная все о сетях и системах досконально, ты действительно можешь контролировать почти любую ситуацию сам. Для этого тебе, как минимум, необходимо:
1) прочитать всю возможную информацию о протоколах и освоить методы взлома на межсетевом и транспортном уровнях сети;
2)выучить Ассемблер и понять принципы работы файловых систем (FAT32, EXT2 etc);
Да-да, именно так! Ведь именно этим занимались почти все известные на сегодняшний день хакеры, и именно это должен уметь настоящий хакер! Ведь ты всегда хотел им стать! Сделай это!
Надеюсь, я зарядил тебя кое-каким стимулом. А теперь я хочу тебя зацепить, чтобы было не просто интересно - чтобы тебя тянуло! Я дам тебе начальные сведения об IP-спуфинге!

***
Вся информация, проходящая в сети, формируется и передается в виде «пучков», а не потоком, как может показаться сначала. Каждый пучок состоит из тела и заголовка. Теперь я постараюсь внедрить в твой мозг значение инкапсуляции. Я нарисовал тебе цепь, состоящую из одного протокола на каждом уровне модели OSI.
Уровень Протокол
Прикладной FTP
Транспортный TCP
Межсетевой IP(+ICMP)
Канальный ARP(+драйверы)
Физический Ток :)
Представим такую картину: юзер делает FTP-запрос. Как же такие данные, состоящие из разумных и понятных обычному человеку команд (например, LIST), за мгновение превращаются в электрический ток или радиоволны? Дело в том, что за это «мгновение» происходит ряд событий, в котором задействованы все уровни OSI. Называется он инкапсуляцией. FTP-команда на прикладном уровне «спускается» по OSI к физическому уровню: сначала эта команда переходит на транспортный уровень, на котором формируется «пучок» (сегмент), телом которого является FTP-команда, при этом TCP добавляет свой заголовок. Затем сегмент транспортного уровня переходит «ниже» и становится «пучком» (пакетом) межсетевого уровня. Протокол IP, естественно, добавляет свой заголовок в этот пакет (кстати, в этом заголовке и хранится IP-адрес отправителя и получателя). Далее пакет межсетевого уровня передаётся канальному (пишется слитно). На канальном уровне формируется свой «пучок», который называется кадром или фреймом. Кадр состоит из заголовка, добавленного протоколами этого уровня, и тела, в котором лежит пакет межсетевого уровня. Вот, вроде бы, и всё про инкапсуляцию. Я проапгрейдил твой мозг, и теперь он готов освоить спуфинг : ) .

Spoofing IP - это подмена исходного адреса в заголовке пакетов. Многие подумают, что это уникальный способ скрытия/изменения IP-адреса, аналогичный proxy или socks. Это не так. Спуфинг лишь позволяет изменить IP-адрес в заголовке пакета, но не удерживать этот адрес как свой (т.е. ты не сможешь получить ответ, его получит хозяин адреса, который ты указал вместо своего). Надеюсь, ты меня понял, иначе тебе не стоит читать дальше. Так вот… ты уже обратил внимание, что я говорю «пакет», а не «сегмент» или «кадр»? Это значит, что для того, чтобы изменить свой IP-адрес в заголовке, мы будем работать с межсетевым уровнем. С этого момента начинаем практику, теория окончена :) . Для тех, кто продвинут в кодинге, я наскрёб в интернете сорцы прог, осуществляющих спуфинг IP. Почувствовал прилив энергии?! =))
Для Delphi (сказано, что работает только в Win2k): [http://myphp4.h15.ru/IP-Spoofing-DELPHI.rar](http://myphp4.h15.ru/IP-Spoofing-DELPHI.rar)
если ссылка вдруг умрёт, вот другая: [http://www.sources.ru/delphi/delphi_send_raw_ip_packets.shtml](http://www.sources.ru/delphi/delphi_send_raw_ip_packets.shtml)
Для C++ (тоже, по-моему, для win2k) вот: [http://myphp4.h15.ru/IP-Spoofing-C++.rar](http://myphp4.h15.ru/IP-Spoofing-C++.rar)
И по той же причине ещё две:
[http://www.sources.ru/cpp/cpp_raw_tcp_win2000.shtml](http://www.sources.ru/cpp/cpp_raw_tcp_win2000.shtml)
[http://www.sources.ru/cpp/cpp_raw_tcp_200.shtml](http://www.sources.ru/cpp/cpp_raw_tcp_200.shtml)
На этот момент мне известны три готовые программы, осуществляющие IP-Spoofing. Все они под Linux. Первые две - Gspoof и IPSorcery – имеют приятный пользовательский интерфейс. Они позволяют собирать IP, ICMP-пакеты, TCP, UDP-сегменты. Разобраться в этих программах более, чем просто, и на них я зацикливаться не буду. А подробней мы познакомимся с другой софтиной – Sing. Это многофункциональная консольная утилита, главной задачей которой является посылка ICMP-пакетов с произвольно заданным Source IP (адресом отправителя) в заголовке. Прогу берём отсюда:
[http://sourceforge.net/project/showfiles.php?group_id=6994](http://sourceforge.net/project/showfiles.php?group_id=6994)
Скачали, распаковали, установили. Приступим к тестированию...
Введём команду, которая является аналогом команды ping:
sing 127.0.0.1
Результатом будет строка
“16 bytes from 127.0.0.1: seq=0 ttl=64 TOS=0 time=0.281 ms”.
Рассмотрим пару опций программы. Опция
-с
это количество посылаемых пакетов. Опция
-s
это размер мусора, содержащегося в каждом пакете, в байтах. Например, результатом команды
sing 127.0.0.1 -c 2 -s 20000
будет
SINGing to 127.0.0.1 (127.0.0.1): 20016 data bytes
20016 bytes from 127.0.0.1: seq=0 ttl=64 TOS=0 time=0.386 ms
20016 bytes from 127.0.0.1: seq=1 ttl=64 TOS=0 time=0.359 ms

--- 127.0.0.1 sing statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.359/0.373/0.386 ms
Эти данные означают, что отправлено два пакета размером 20016 байт на 127.0.0.1 и два пакета вернулось.
Проверим эту же команду с заранее запущенным в отдельном терминале снифером tcpdump.
После выполнения этой команды, на терминале, где запущен снифер появятся следующие данные:
22:19:00.755683 IP localhost.localdomain > localhost.localdomain: icmp 16416: echo request seq 0
22:19:00.758504 IP localhost.localdomain > localhost.localdomain: icmp
22:19:00.758765 IP localhost.localdomain > localhost.localdomain: icmp 16416: echo reply seq 0
22:19:00.758800 IP localhost.localdomain > localhost.localdomain: icmp
22:19:01.785720 IP localhost.localdomain > localhost.localdomain: icmp 16416: echo request seq 256
22:19:01.785739 IP localhost.localdomain > localhost.localdomain: icmp
22:19:01.785831 IP localhost.localdomain > localhost.localdomain: icmp 16416: echo reply seq 256
22:19:01.785835 IP localhost.localdomain > localhost.localdomain: icmp
Здесь всё ясно: локалхост передает данные локалхосту.
А теперь познакомимся с флагом, который позволяет подменять Source IP:
-S
Введём команду
sing -S 127.0.0.5 127.0.0.1 -c 2 -s 20000
которая схожа с предыдущей, единственное - адрес отправителя 127.0.0.5!
Вот и всё, теперь мы умеем отправлять заспуфенные пакеты! tcpdump мне не даст соврать
(22:29:44.387004 IP 127.0.0.5 > localhost.localdomain: icmp 16416: echo request seq 256)

Ну, что ж, на данный момент ты уже “вооружён”. Осталось только закрепить полученные знания.
Целью спуфинга обычно является вызов DoS(отказа в обслуживании) или провокация DDoS(распределённой атаки с целью вызова DoS). А вот способов обеспечения DoS/DDoS в спомощью айписпуфинга несколько:
1) Чтобы задосить сервер(А) ты должен отослать ему много ICMP-пакетов. Ты меняешь свой ip просто на какой-то левый, чтобы пакеты, которыми отвечает тебе сервер(А) не вызвали DoS на твоей машине. Так сервер(А) будет отвечать на них другой машине, которой, возможно, даже не существует.
2)Ты меняешь свой IP на IP ЖЕРТВЫ. Затем отсылаешь пакеты серверу(В), а он, в свою очередь, DoSит ЖЕРТВУ, адрес которой указан в этих пакетах.
3)Как адрес отправителя, так и адрес получателя равен адресу ЖЕРТВЫ. Ты отсылаешь множество таких пакетов, и ЖЕРТВА ДоСит сама себя.
Практически любой сервер уязвим к DoS-атаке, если не умеет резать пакеты, которые приходят к нему с его же адреса, или не может отличить обычный пользовательский запрос от ДоС-атаки(осуществить это вполне возможно: если это атака, то пакеты приходят с определённой периодичностью, их много, они однообразны).
Но, это только в теории. На практике большое значение имеет ширина канала (и твоего, и жертвы, и сервера). Выигрывает тот, у кого канал шире и мозгов больше; ).
Что касается распределённой атаки, то тут спуфинг применяется обычно чтобы скрыть адрес хозяина машин-зомби. Самим зомби спуфинг не обязателен: ). Здесь же важна не столько ширина твоего канала, сколько количество этих зомби.
Фуфф… вроде бы про спуфинг всё… Теперь заключительное слово…

***
Та информация, которую ты только что впитал, - лишь кусочек того, что можно знать о низкоуровневом хакинге. Как видишь, это очень легко, но самое интересное вот в чем. Имея даже такой маленький кусочек знаний, ты, при определенной сноровке, сможешь повалить сервер. Зато, пыхтя и обливаясь холодным потом, ты ищешь баги в скриптах ради каких-то nobody-привилегий. Конечно, я здесь немного утрировал: порой, поиск багов в скриптах - единственный способ получить доступ к информации. Но в противовес этим словам я поставлю другие: помнишь, я тебе сказал, что IP-адрес можно менять лишь в пакетах, что нельзя получать обратно ответы от сервера и нельзя сделать этот адрес "своим"? Я обманул тебя!!! Учись, хакер. Удачи!

Примечание. Статью писал сам, никакого плагиата. Извиняюсь, что обещал написать давно, а выложил только сейчас. Статья написана Саетгареевым Данилом aka DrWeb специально для HackZona.Ru, которая, надеюсь, и позаботится об авторских правах – свой труд всё-таки дороже золота: )







Spoofing IP
Это подмена исходного адреса в заголовке пакетов. Однако Spoofing IP не является уникальным способ скрытия/изменения IP-адреса, аналогичный proxy или socks. Спуфинг лишь позволяет изменить IP-адрес в заголовке пакета, но не удерживать этот адрес как свой (т.е. ты не сможешь получить ответ, его получит хозяин адреса, который ты указал вместо своего). Т.е., для того, чтобы изменить свой IP-адрес в заголовке, необходимо работать с межсетевым уровнем.

Целью спуфинга обычно является вызов DoS (отказа в обслуживании) или провокация DDoS (распределённой атаки с целью вызова DoS). А вот способов обеспечения DoS/DDoS с помощью IP-спуфинга несколько:

    Чтобы выполнить DoS-атаку на сервер (А) необходимо отослать ему много ICMP-пакетов. Изменить свой ip просто на какой-то левый, чтобы пакеты, которыми отвечает сервер (А) не вызвали DoS на Вашей машине. А так сервер (А) будет отвечать на них другой машине, которой, возможно, даже не существует;
    Изменяем свой IP на IP "жертвы". Затем отсылаем пакеты серверу (В), а он, в свою очередь, DoSит "жертву", адрес которой указан в этих пакетах;
    Как адрес отправителя, так и адрес получателя равен адресу "жертвы". Отсылаем множество таких пакетов, и "жертва" DoSит сама себя.

Практически любой сервер уязвим к DoS-атаке, если не умеет резать пакеты, приходящие к нему с его же адреса, или не может отличить обычный пользовательский запрос от DoS-атаки.
На практике большое значение имеет ширина канала (Вашего, "жертвы" и сервера). Выигрывает обычно тот, у кого канал шире и мозгов больше.
В распределённой атаке спуфинг применяется обычно для скрытия адреса хозяина машин-зомби. Самим зомби спуфинг не обязателен. Здесь уже будет важна не столько ширина Вашего канала, сколько количество этих зомби.









IP спуффинг (подделкa собственного IP адреса).

Автор : Kapil Sharma
Перевод : Роман Шумихин.

Спуффинг включает в себя подделку собственного IP адреса, это использование одной машины, чтобы выдать себя за другую. Многие приложения и утилиты в UNIX при идентификации полагаются на IP адрес; для обеспечения безопасности в своих сетях многие разработчики используют контроль доступа, основанный на имени (IP адресе) вызывающего компьютера. IP адрес - это уникальный идентификатор, но в таких ситуациях на него нельзя полагаться, так как его легко подделать.
Чтобы понять процесс спуффинга, сначала я объясню процесс идентификации TCP и IP, а потом как нападающий может проникнуть в вашу сеть.

Сначала клиентская система посылает серверу сообщение SYN (от слова синхронизация). Сервер подтверждает получение SYN сообщения, посылая клиенту сообщение SYN-ACK (подтверждение синхронизации). Клиент завершает процесс установки соединения посылкой сообщения ACK (подтверждение). После этого соединение между клиентом и сервером установлено. Теперь сервер и клиент могут обмениваться службо-специфическими данными.

TCP использует последовательные номера пакетов. Когда между двумя машинами установлен виртуальный канал связи, TCP присваивает каждому пакету номер в качестве идентифицирующего индекса. Обе машины используют этот номер для проверки ошибок и для сообщения друг другу об ошибках.
Rik Farrow в своей статье "Атаки с использованием последовательных номеров (Sequence Number Attacks)" объясняет систему последовательной нумерации пакетов так:

    "Последовательный номер используется для подтверждения получения данных. В начале TCP соединения клиент посылает TCP пакет с начальным номером, но не подтверждение. Если на другом конце соединения запущено серверное приложение, сервер посылает в ответ TCP пакет с его собственным начальным номером и подтверждение: начальный номер клиентского пакета + 1. Когда клиентская система получает этот пакет, она должна послать свое собственное подтверждение: начальный последовательный номер сервера + 1." 

Поэтому у атакующего есть две проблемы:
1) Он должен подделать исходный адрес.
2) Он должен поддерживать правильную последовательность номеров с объектом атаки.

Вторая задача - самая сложная, потому что, когда сервер устанавливает начальный последовательный номер, атакующий должен послать правильный ответ. Как только атакующий правильно угадает последовательный номер, он сможет синхронизироваться с сервером и установить действительную сессию.

Службы, уязвимые для IP спуффинга:

    RPC (Remote Procedure Call services) - службы удаленного вызова процедур
    Любая служба, которая использует идентификацию по IP адресу
    Система X Window
    Набор программ на R (rlogin, rsh и т.д.) 

Инструменты для TCP и IP спуффинга:
1) Mendax for Linux
легкий в использовании инструмент для угадывания последовательных номеров TCP и обмана rshd. [Текущий URL неизвестен. -Ред.]

2) spoofit.h
хорошо комментированная библиотека для включения функциональности IP спуффинга в ваши программы. [Текущий URL неизвестен. -Ред.]

3) ipspoof
ipspoof - утилита для TCP и IP спуффинга.

4) hunt
hunt - сниффер (программа, которая анализирует сетевой трафик в поисках необходимой пользователю информации), который также имеет многие функции для спуффинга.

5) dsniff
dsniff - набор инструментов для тестирования сетевого аудита и возможности проникновения в сеть. Включает в себя dsniff, filesnarf, mailsnarf, msgsnarf, urlsnarf и webspy, который пассивно просматривает сеть в поисках интересных данных (пароли, адреса e-mail, файлы и т.д.). arpspoof, dnsspoof и macof облегчают перехват сетевого трафика.


Меры для предотвращения атак с использованием IP спуффинга:

    Избегайте идентификации по клиентскому IP адресу. Применяйте шифрование процесса идентификации во всей системе.
    Сконфигурируйте вашу сеть так, чтобы отвергать пакеты (reject packets) из Сети, IP адрес которой происходит из семейства локальных адресов. Обычно это делается с помощью маршрутизатора.
    Если вы разрешаете соединения извне с узлами, которым вы доверяете, включите шифрование сессии на маршрутизаторе.

Заключение:
Спуффинг-атаки очень опасны, и их трудно заметить. Сейчас они становятся все более популярными, и единственный способ предотвратить такие атаки - внедрение мер безопасности, таких как шифрование всего процесса идентификации, чтобы обезопасить вашу сеть. 





http атака с закосом под пользователя

DNS Amplification
Amplification без DNS (NTP)

Во время атаки проверять не редиректят ли нас
Попробовать организовать ботнет

У провайдеров искать пользователей с белым ip и
проверить Reverce Path Forwarding 
Каким образом? Если нету и никакого фаерволла нет, то можно использовать

Забивать канал, мешать индексации

Подделываем sources под artfix.ru и начинаем устанавливать соединения с разными железками, которые будут отвечать на этого
(- icmp
- syn
- udp
- http
- data
- атака на https
дергать базу данных ( определить по админке)

ISP-Manadger (брутфорс https

(Reverce Path Forwarding может помешать, но никто не делает)

DDos когда будет индексация сайта

Бот замаскировать под поисковик или пользователя
блокировать ssh

onion-routing (наложенная сеть)
tor

MPack, IcePack и WebAttacker

По словам Ильи Дронова, атака 30 марта была комбинацией прикладного и SYN-флуда, атака 4 апреля состояла из битых TCP-соединений,[14] атака 6 апреля была направлена на отказ канала, а не оборудования.[15]
DDoS управляемый: периодически меняют структуру пакетов, чтобы обойти фильтр
поток HTTP запросов 
SYN-flood
P.S. Цена ботнета сейчас — копейки, их часто воруют у создателей.

Yandex/Mail.ru располагают очень сильными командами. Сильная группа специалистов по сетевой безопасности есть в RTCOMM. На этом из состоявшихся команд, пожалуй, все. Однако постоянно появляются новые люди. Так, относительно недавно тематикой защиты от DDoS стали заниматься Oversun (специализируется в хостинге и облачных вычислениях) и Kaspersky (win32 антивирусы).

97% наблюдаемых атак были атаки на уровень приложения (HTTP). Средняя длительность атаки 3 дня, максимальная длительность атаки 6 месяцев. Средняя численность атакующего ботнета - 5000, средняя численность российской части ботнета - 1000.

Борьба с ddos
Удаляем http сервер из автостарта
top смотрим
dmesg смотрим
netstat смотрим
access.log смотрим

iotables
ipset
nginx
Linux2.6 и выше


RTFM




1. Забить канал.
2. Опустить хозяина сайта на бабки за паразитный трафик. (вряд ли получиться)
3. Juniper оборудование
4. Попробовать самому приобрести
5. Узнать ширину канала
6. Жёстко выкачивать картинки
7. Повесить scp который будет выкачивать весь сервер (палево)
8. Брутфорс
9. При ddos просто выключают сервер
10. Атака на сайты (все способы), картинки с другого сайта - Закачка на Сервер
  GET /index.php?search=<случайная строка> флуд
При умелой сноровке атакующий будет дергать страницы с логикой, которая к примеру будет дергать базу данных (поиск, и т.д).

В расчет нужно брать особенности атаки, если боты еще будут по ssh долбить. 



Starting Nmap 5.00 ( [http://nmap.org](http://nmap.org) ) at 2012-02-21 13:16 MSK
Interesting ports on yin.artfix.ru (78.46.50.59):
Not shown: 986 closed ports
PORT     STATE    SERVICE
21/tcp   open     ftp
22/tcp   open     ssh
25/tcp   open     smtp
53/tcp   open     domain
80/tcp   open     http
110/tcp  open     pop3
143/tcp  open     imap
443/tcp  open     https
465/tcp  open     smtps
873/tcp  open     rsync
993/tcp  open     imaps
995/tcp  open     pop3s
3306/tcp filtered mysql
8080/tcp filtered http-proxy

Атака на ftp
ssh (syn)
smtp (syn)
imap (syn)
pop (syn)
dns (udp)
http (syn, http)
rsync (syn)


DDoS - виртуальный терроризм. Что такое DDoS-атака?
Терроризм - это, пожалуй, самая большая проблема человечества на сегодняшний день. И виртуальное сообщество здесь мало чем отличается от реального мира. Ушли те романтические времена, когда собирательным образом хакера являлся хитрый тип, взломавший защиту банка и перекачавший на свой счет кругленькую сумму. Жесткие времена - жесткие нравы. Теперь хакеры с помощью атаки на сервер блокируют его работу, а затем выставляют хозяевам свои требования. Виртуальный террор в чистом виде. Редкий месяц обходится без сенсационных сообщений в прессе о том, что тот или иной сервер подвергся DDoS-атаке. В данном обзоре попытаемся разобраться в том, что такое DDoS-атака и что можно предпринять, чтобы снизить ее опасность.

DDoS-атака - сокращение от Distributed Denial Of Service Attack. Особенностью данного вида компьютерного преступления является то, что злоумышленники не ставят своей целью незаконное проникновение в защищенную компьютерную систему с целью кражи или уничтожения информации. Цель данной атаки - парализовать работу атакуемого веб-узла. Первые сообщения о DDoS-атаках относятся к 1996 году. Но всерьез об этой проблеме заговорили в конце 1999 года, когда были выведены из строя веб-серверы таких корпораций, как Amazon, Yahoo, CNN, eBay, E-Trade и ряда других, немногим менее известных. Спустя год, в декабре 2000-го "рождественский сюрприз" повторился: серверы крупнейших корпораций были атакованы по технологии DDoS при полном бессилии сетевых администраторов. С тех пор сообщение о DDoS-атаке уже не являются сенсацией. Главной опасностью здесь является простота организации и то, что ресурсы хакеров являются практически неограниченными, так как атака является распределенной.

Схематически DDoS-атака выглядит примерно так: на выбранный в качестве жертвы сервер обрушивается огромное количество ложных запросов со множества компьютеров с разных концов света. В результате сервер тратит все свои ресурсы на обслуживание этих запросов и становится практически недоступным для обычных пользователей. Циничность ситуации заключается в том, что пользователи компьютеров, с которых направляются ложные запросы, могут даже не подозревать о том, что их машина используется хакерами. Программы, установленные злоумышленниками на этих компьютерах, принято называть "зомби". Известно множество путей "зомбирования" компьютеров - от проникновения в незащищенные сети, до использования программ-троянцев. Пожалуй, этот подготовительный этап является для злоумышленника наиболее трудоемким.

Чаще всего злоумышленники при проведении DDoS-атак используют трехуровневую архитектуру, которую называют "кластер DDoS". Такая иерархическая структура содержит:


управляющую консоль (их может быть несколько), т.е. именно тот компьютер, с которого злоумышленник подает сигнал о начале атаки;
главные компьютеры. Это те машины, которые получают сигнал об атаке с управляющей консоли и передают его агентам-"зомби". На одну управляющую консоль в зависимости от масштабности атаки может приходиться до нескольких сотен главных компьютеров;
агенты - непосредственно сами "зомбированные" компьютеры, своими запросами атакующие узел-мишень.
Проследить такую структуру в обратном направлении практически невозможно. Максимум того, что может определить атакуемый, это адрес агента. Специальные мероприятия в лучшем случае приведут к главному компьютеру. Но, как известно, и компьютеры-агенты, и главные компьютеры являются также пострадавшими в данной ситуации и называются "скомпрометированными". Такая структура делает практически невозможным отследить адрес узла, организовавшего атаку.

Другая опасность DDoS заключается в том, что злоумышленникам не нужно обладать какими-то специальными знаниями и ресурсами. Программы для проведения атак свободно распространяются в Сети.


Дело в том, что изначально программное обеспечение DDoS создавалось в "мирных" целях и использовалось для экспериментов по изучению пропускной способности сетей и их устойчивости к внешним нагрузкам. Наиболее эффективным в этом случае является использование так называемых ICMP-пакетов (Internet control messaging protocol), т.е. пакетов, имеющих ошибочную структуру. На обработку такого пакета требуется больше ресурсов, после решения об ошибочности пакет отправляется посылающему, следовательно достигается основная цель - "забивается" трафик сети.

За годы это программное обеспечение постоянно модифицировалось и к настоящему времени специалисты по информационной безопасности выделяют следующие виды DDoS-атак:

UDP flood - отправка на адрес системы-мишени множества пакетов UDP (User Datagram Protocol). Этот метод использовался в ранних атаках и в настоящее время считается наименее опасным. Программы, использующие этот тип атаки легко обнаруживаются, так как при обмене главного контроллера и агентов используются нешифрованные протоколы TCP и UDP.
TCP flood - отправка на адрес мишени множества TCP-пакетов, что также приводит к "связыванию" сетевых ресурсов.
TCP SYN flood - посылка большого количества запросов на инициализацию TCP-соединений с узлом-мишенью, которому, в результате, приходится расходовать все свои ресурсы на то, чтобы отслеживать эти частично открытые соединения.
Smurf-атака - пинг-запросы ICMP (Internet Control Message Protocol) по адресу направленной широковещательной рассылки с использованием в пакетах этого запроса фальшивый адрес источника в результате оказывается мишенью атаки.
ICMP flood - атака, аналогичная Smurf, но без использования рассылки.
Естественно, наиболее опасными являются программы, использующие одновременно несколько видов описанных атак. Они получили название TFN и TFN2K и требуют от хакера высокого уровня подготовки.

Одной из последних программ для организации DDoS-атак является Stacheldracht (колючая проволока), которая позволяет организовывать самые различные типы атак и лавины широковещательных пинг-запросов с шифрованием обмена данными между контроллерами и агентами.

Конечно же, в этом обзоре указаны только наиболее известные программы и методики DDoS. На самом деле спектр программ намного шире и постоянно дополняется. По этой же причине достаточно наивным было бы описание универсальных надежных методов защиты от DDoS-атак. Универсальных методов не существует, но к общим рекомендациям для снижения опасности и уменьшения ущерба от атак можно отнести такие меры, как грамотная конфигурация функций анти-спуфинга и анти-DoS на маршрутизаторах и межсетевых экранах. Эти функции ограничивают число полуоткрытых каналов, не позволяя перегружать систему.

На уровне сервера желательно иметь вывод консоли сервера на другой IP-адрес по SSH-протоколу для возможности удаленной перезагрузки сервера. Другим достаточно действенным методом противодействия DDoS-атакам является маскировка IP-адреса.

Весьма важным делом в этом направлении является профилактика - программное обеспечение должно быть "отпатчено" от всевозможных "дыр".

Как уже отмечалось, обнаружить виртуальных террористов, организовавших DDoS-атаку, задача очень сложная. Поэтому для борьбы с данным видом угроз необходимо тесное сотрудничество администраторов серверов и с интернет-провайдерами, а также провайдеров с операторами магистральных сетей. Потому что, как и в реальной жизни, бороться с терроризмом возможно только объединением законопослушных граждан.

Автор: Владимир Малярчук 








Ok.
Насчет спуфинга: вот уже лет 5 исполнилось древним рекомендация от cisco про включение Reverce Path Forwarding максимально ближе к клиенту.
Что там происходит сейчас на практике? Неужели их все игнорируют?
Я просто не видел массового трафика с успешно подменяемым IP, кроме как фокус с DNS-серверами ( habrahabr.ru/blogs/linux/83202/)
0
Fedia 18 февраля 2010, 16:25 # ↑
Рекомендации в нашей стране всем глубоко по… RPF довольно жручий при большом объеме трафика да и не все знают о несимметричном RPF, а симметричный очень строг к топологии.

Мало того, обязали же провайдеров делать фильтрацию по RFC2827! Уж куда проще! Один ACL в 2 строки… Так нет же — постоянно сталкиваюсь, что даже это не сделано… 



У атакуемого клиента было 2 гигабитных канала.
Оба лежали. А также «зацепило» ещё кучку клиентов поменьше

Трафик был: http GET, DNS, ICMP, мусор

с http перешли на https (это была первая, слабенькая волна), остальное сильно урезали силами провайдера (за что было ему уплочено). ДДоС был на забивание канала, а не на убивание сервисов.

Паразитный трафик силами провадера и выкаченного Cisco GUARD был урезан в 15 раз 


(палюсь)
50000р за 3 дня 7гбит/сек 300000 хостов

ЗЫ есличо, ботнет не мой. Я такую атаку отражал и мы производили анализ затрат. В прошлом году в феврале

Положить канал 100мбит/сек на день будет стоить наверно 5круб






Извините, пожалуйста, за критику. Вы потратили силы на написание этой статьи, вложили в нее много усилий, но… но в вашей статье какое-то совершенно сказочное количество неточностей. :(

«На основе сервера Xeon 2.5GHz / 4Gb RAM / SAS можно отражать атаку примерно до 300 Мб»

Полоса трафика не имеет никакого значения для измерения мощности ДОС-атаки. Это же очевидно: заполнить и гигабит можно без малейшей нагрузки на сервер.

«Максимальная возможная мощность сдерживания DDoS атаки ограничивается физическими возможностями сервера и пропускной способностью канала.»

Капитан Очевидность?

«Если у сервера несколько IP то сайт под ДОСом ляжет, работа других сайтов на сервере и ssh нарушена не будет. „

Да ну? Неужели?

“По умолчанию ОС Debian и другие ОС не в состоянии поддерживать огромное количество соединений создаваемое ботнетом.»

Что такое «ОС» в данном случае? Это не вопрос операционной системы (набора прикладных программ), это уровень ядра (как вы дальше правильно заметили), фронтенда и бекенда.

«Аккуратно меняем конфигурацию ядра и перезагружаем сервер…»

После смены sysctl не нужно перегружаться.

«И так. Наша система способна выдержать натиск ботов.»

Да? уже?

«процессы PHP и БД полностью «съедают» ресурсы памяти и процессора, так что значение load average превышает 100 пунктов.»

LA не зависит напрямую ни от памяти, ни от процессора. По большому счету, это бессмысленный показатель.

«Эффективный поиск ботов возможен только при остановленном вебсервере»

Да? Вы видите в нетстате соединения на незапущенный сервис, не слушающий нужный порт? :)

«Свыше 300Мбит/с мы «упремся» в предел рандомного чтения SAS дисков.»

Вы действительно думаете:
a) что чтение одной странички сайта — это рандомное чтение?
b) что одна страничка каждый раз читается с диска?

Ну и дальше уже не читал…
Gbps
Сокращение от Gigabits per second, гигабит в секунду
Mpps - миллион пакетов в секунду. 
rps revolutions per second noun (столько-то) оборотов в секунду 
[http://en.wikipedia.org/wiki/Requests_per_second#Load_limits](http://en.wikipedia.org/wiki/Requests_per_second#Load_limits)

Виды атак
1.Исчерпание канала (Больше всего атак - 100000)
2.На инфраструктуру - DNS (10000) 
3.На сетевой стэк (1000 атак)
4.На приложения (slow smart bots) (100)

Атака без ботнета (UDP+spoofing) - DNS,NTP Amplification


Различные техники исполнения.
TCP SYN Flood, 
TCP SYN-ACK Reflection Flood (DRDoS), 
TCP Spoofed SYN Flood, 
TCP ACK Flood, 
TCP IP Fragmented Attack, 
HTTP and HTTPS Flood Attacks, 
INTELLIGENT HTTP and HTTPS Attacks, 
ICMP Echo Request Flood, 
UDP Flood Attack, 
DNS Amplification Attacks *
FIN-WAIT-2 атака (TCP Sockstress)



SYN flood
17:28:12.305877 IP 212.58.14.83.30066 > 212.192.255.245.80: S 1680318705:1680318705(0)
17:28:12.305915 IP 212.118.95.136.42761 > 212.192.255.245.80: S 2331650342:2331650342(0)
17:28:12.305944 IP 212.4.252.150.63642 > 212.192.255.245.80: S 1780088629:1780088629(0)
17:28:12.305978 IP 212.123.17.65.53834 > 212.192.255.245.80: S 1363172319:1363172319(0)
17:28:12.306012 IP 212.8.237.44.18701 > 212.192.255.245.80: S 2693728203:2693728203(0)
17:28:12.306053 IP 212.231.103.18.49297 > 212.192.255.245.80: S 1358154416:1358154416(0)
17:28:12.306094 IP 212.75.81.44.38496 > 212.192.255.245.80: S 3995520202:3995520202(0)
17:28:12.306128 IP 212.138.156.170.26992 > 212.192.255.245.80: S 24434248:24434248(0)
17:28:12.306157 IP 212.141.49.99.31961 > 212.192.255.245.80: S 3739325953:3739325953(0)
17:28:12.306191 IP 212.113.33.76.48150 > 212.192.255.245.80: S 4009899498:4009899498(0)
17:28:12.306225 IP 212.240.116.218.22631 > 212.192.255.245.80: S 500296056:500296056(0)
17:28:12.306271 IP 212.141.217.132.37593 > 212.192.255.245.80: S 3638679843:3638679843(0)
17:28:12.306311 IP 212.83.188.232.12937 > 212.192.255.245.80: S 626436486:626436486(0)
17:28:12.306346 IP 212.250.46.138.21007 > 212.192.255.245.80: S 75717416:75717416(0)
17:28:12.306386 IP 212.39.222.26.49161 > 212.192.255.245.80: S 447418041:447418041(0)
17:28:12.306416 IP 212.98.72.17.16639 > 212.192.255.245.80: S 853255599:853255599(0)
17:28:12.306457 IP 212.220.246.162.38560 > 212.192.255.245.80: S 2616693313:2616693313(0)
17:28:12.306493 IP 212.87.83.131.34590 > 212.192.255.245.80: S 2616214561:2616214561(0)
17:28:12.306522 IP 212.216.58.93.14133 > 212.192.255.245.80: S 3699880955:3699880955(0)
17:28:12.306557 IP 212.83.85.136.32100 > 212.192.255.245.80: R 2318562855:2318562855(0)
17:28:12.306577 IP 212.239.239.244.36850 > 212.192.255.245.80: S 3076267411:3076267411(0)
17:28:12.306621 IP 212.152.43.124.60615 > 212.192.255.245.80: S 3621419802:3621419802(0)
17:28:12.306655 IP 212.90.179.139.39460 > 212.192.255.245.80: S 2331627305:2331627305(0)
17:28:12.306683 IP 212.208.132.120.28972 > 212.192.255.245.80: S 947313942:947313942(0)
17:28:12.306714 IP 212.231.67.151.42426 > 212.192.255.245.80: S 203216949:203216949(0)
17:28:12.305877 IP 212.58.14.83.30066 > 212.192.255.245.80: S 1680318705:1680318705(0)
17:28:12.305915 IP 212.118.95.136.42761 > 212.192.255.245.80: S 2331650342:2331650342(0)
17:28:12.305944 IP 212.4.252.150.63642 > 212.192.255.245.80: S 1780088629:1780088629(0)
17:28:12.305978 IP 212.123.17.65.53834 > 212.192.255.245.80: S 1363172319:1363172319(0)
17:28:12.306012 IP 212.8.237.44.18701 > 212.192.255.245.80: S 2693728203:2693728203(0)
17:28:12.306053 IP 212.231.103.18.49297 > 212.192.255.245.80: S 1358154416:1358154416(0)
17:28:12.306094 IP 212.75.81.44.38496 > 212.192.255.245.80: S 3995520202:3995520202(0)
17:28:12.306128 IP 212.138.156.170.26992 > 212.192.255.245.80: S 24434248:24434248(0)
17:28:12.306157 IP 212.141.49.99.31961 > 212.192.255.245.80: S 3739325953:3739325953(0)
17:28:12.306191 IP 212.113.33.76.48150 > 212.192.255.245.80: S 4009899498:4009899498(0)
17:28:12.306225 IP 212.240.116.218.22631 > 212.192.255.245.80: S 500296056:500296056(0)
17:28:12.306271 IP 212.141.217.132.37593 > 212.192.255.245.80: S 3638679843:3638679843(0)
17:28:12.306311 IP 212.83.188.232.12937 > 212.192.255.245.80: S 626436486:626436486(0)
17:28:12.306346 IP 212.250.46.138.21007 > 212.192.255.245.80: S 75717416:75717416(0)
17:28:12.306386 IP 212.39.222.26.49161 > 212.192.255.245.80: S 447418041:447418041(0)
17:28:12.306416 IP 212.98.72.17.16639 > 212.192.255.245.80: S 853255599:853255599(0)
17:28:12.306457 IP 212.220.246.162.38560 > 212.192.255.245.80: S 2616693313:2616693313(0)
17:28:12.306493 IP 212.87.83.131.34590 > 212.192.255.245.80: S 2616214561:2616214561(0)
17:28:12.306522 IP 212.216.58.93.14133 > 212.192.255.245.80: S 3699880955:3699880955(0)

17:28:12.306557 IP 212.83.85.136.32100 > 212.192.255.245.80: R 2318562855:2318562855(0)

17:28:12.306577 IP 212.239.239.244.36850 > 212.192.255.245.80: S 3076267411:3076267411(0)
17:28:12.306621 IP 212.152.43.124.60615 > 212.192.255.245.80: S 3621419802:3621419802(0)
17:28:12.306655 IP 212.90.179.139.39460 > 212.192.255.245.80: S 2331627305:2331627305(0)
17:28:12.306683 IP 212.208.132.120.28972 > 212.192.255.245.80: S 947313942:947313942(0)
17:28:12.306714 IP 212.231.67.151.42426 > 212.192.255.245.80: S 203216949:203216949(0)

SYN flood, не выводящий сервер из строя
Некорректные закрытия соединений, расходующие ресурсы сервера


Канальная ёмкость
Атаки прикладного уровня
«0-day exploits»
Интеллектуальные организаторы
Аутсорсинг компетенций
Расследование инцидентов?






Борьба с ddos
Не паникуем
Удаляем http сервер из автостарта
Что в top?
Интересные сообщение в dmesg
Содержимое netstat
Анализируем access. Log

Инструменты
Linux 2.6
iptables
ipset
nginx


Защита от HTTP Flood. Frontend
Минимизируем размеры буферов
large_client_header_buffers
client_header_buffer_size
client_body_buffer_size
client_max_body_size

Минимизируем ожидание клиента
reset_timedout_connection on;
client_header_timeout
client_body_timeout
keepalive_timeout
send_timeout


И ожидаем попавшихся ботов на default vhost
       server {
                listen          80;
                server_name  noname;                
                return 444;
        }

Ограничиваем количество одновременных соединений с одного ip
limit_zone conlim $binary_remote_addr XXm;
limit_conn conlim  XX;


HTTP Flood. Backend
Бюджетирование нагрузки на скриптовый бэкенд через

limit_req_zone  $binary_remote_addr  zone=qulim:Xm   rate=Yr/s;
limit_req zone=qulim burst=Z;





HTTP Flood. Отфильтровать в один запрос

log_format  $http_accept $http_accept_language $http_accept_encoding;
+
grep  --line-buffered
= 
tail -f /var/log/nginx/myserver.access_log  | \
grep --line-buffered \
-F '*/* en-us -' | \
grep  --line-buffered -oE "\BOINK [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3} " | sed -u "s/^BOINK//" | xargs -n1 ipset -A myserv

и вариации на тему из myserv.error_log по ключевому слову limiting

Кого фильтровать не надо
Ваши собственные ajax скрипты (вставляем заголовки-маркеры)
Полезных ботов, например поисковики:
 77.88.0.0/18 Yandex
 87.250.224.0/19 Yandex
 93.158.128.0/18 Yandex
 213.180.192.0/19 Yandex
 95.108.128.0/17 Yandex
 65.52.0.0/14 Microsoft
 209.85.128.0/17 Google
 81.19.64.0/19 Rambler*

рамблер - это телеком, и там иногда живут боты.



Conntrack  abuse
ip_conntrack: table full, dropping packet ?

Conntrack хранит соединения в hashtable и небесплатен. 

При больших размерах таблицы можно:
net.ipv4.netfilter.ip_conntrack_tcp_timeout_*

но проще выключить:
iptables -t RAW -A PREROUTING -d $PUBLISHED_IP -j NOTRACK
iptables -t RAW -A OUTPUT -d $PUBLISHED_IP -j NOTRACK


Фильтрация ботов
ipset

его чудесные b-tree для плохих ботов
ipset -N myserv iptree --timeout XX
ipset -A myserv  $OFFENDING_IP

и 
-N goodbots nethash --hashsize 512 --probes 4 --resize 50
для хороших





Защита от SYN Flood 

syn-cookies!

net.ipv4.tcp_syncookies = 1



Надо выяснить
Настроенные nginx/ipset на сервере
Выключенный conntrack (чтобы не переполнить таблицу)
Выделенный ip для публикуемых сервисов (чтобы можно было перенести его)
Представление о связности хостера (1 BGW и пипец)


HTTP уязвимости


SEO под DDoS-ом

Ваш сайт будет правильно индексироваться во время атаки, что позволит сохранить позиции в выдаче поисковых систем. Особенно актуально для сайтов с большими SEO бюджетами. 