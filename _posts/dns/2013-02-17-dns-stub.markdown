---
layout: post
title:  "dns-stub"
date:   2013-02-17 06:21:12 +0400
categories: dns
tags: dns
---

# dns-stub
Рекурсивные сервер должен быть только для запросов из локальной сети (нашей)
Для запросов из вне он должен быть нерекурсивным
Безопасность - завалят запросами из вне


    итеративные запросы (клиент посылает серверу DNS запрос, в котором требует дать наилучший ответ без обращений к другим DNS-серверам);
    рекурсивные запросы (клиент посылает серверу DNS запрос, в котором требует дать окончательный ответ даже если DNS-серверу придется отправить запросы другим DNS-серверам; посылаемые в этом случае другим DNS-серверам запросы будут итеративными).
Обычные DNS-клиенты (например, рабочие станции пользователей), как правило, посылают рекурсивные запросы.


Если клиент отправил серверу рекурсивный запрос, то он ожидает от него и ответ. DNS сервер сам опрашивает (итеративно обычно, так как коренвые не работают рекурсивно) другие сервера и получает ответ, который переправляет клиенту. dns resolver обычно называют такой сервер. (клиент ставит специальный флаг в запросе)
При отправки итеративного запроса, сервер даёт наилучший ответ (если есть в кеше, то сразу), либо отправляет выше. Клиент сам дальше опрашивает итеративно dns серверы и получает окончательный ответ.

Для своих локальных, обслуживаемых сетей мы работает как dns resolver, для мира отвечаем итеративно.
[https://studopedia.ru/4_164394_algoritmi-raboti-iterativnih-i-rekursivnih-zaprosov-DNS.html](https://studopedia.ru/4_164394_algoritmi-raboti-iterativnih-i-rekursivnih-zaprosov-DNS.html)

Для  связывания зон необходимо использовать stub зоны
stub зона по сути slave зона, но содержащая только NS записи
stub зона должа быть одинаково сконфигурирована и на главном и подчинёном сервере родительской зоны

На родительском делаем stub зону, которая содержить информацию о NS серверах дочерней
На дочернем сервере банально делаем зону и прописываем свои NS и их ip

Родительский стаскивает из master зоны на дочернем только NS и их ip (ip только для своего домена)



Конфигурация файла /etc/named.conf для простого кэширующего сервера имен.

[http://www.linux.org.ru/forum/admin/191082](http://www.linux.org.ru/forum/admin/191082)


Используйте эту конфигурацию для всех серверов в Вашей сети, которые не выступают как основной или подчиненный сервера имен. Установка простого кэширующего севера на локальной клиентской машине уменьшит загрузку первичного сервера. Многие пользователи, использующие dialup-соединения, могут использовать эту конфигурацию. Создайте файл named.conf (touch /etc/named.conf) и добавьте в него следующие строки:

options
{
  directory "/var/named";
  forwarders { 208.164.186.1; 208.164.186.2; };
  forward only;
};
//
// a caching only nameserver config
zone "." in
{
  type hint;
  file "db.cache";
};
zone "0.0.127.in-addr.arpa" in
{
  type master;
  file "db.127.0.0";
};

В строке forwarder 208.164.186.1 и 208.164.186.2 это IP-адреса Ваших основного (Master) и подчиненного (Slave) DNS-серверов. Это могут быть также адреса DNS-серверов Вашего провайдера или вообще любые другие сервера имен.

Для улучшения безопасности Вашего DNS-сервера Вы можете запретить ему контактировать со сторонними серверами, если свои серверы не работают или не отвечают. С опцией forward only, установленной в файле named.conf, сервер имен не будет контактировать с другими серверами для поиска информации, если серверы, на которые перенаправляются запросы, не отвечают.
