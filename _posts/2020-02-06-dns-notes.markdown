---
layout: post
title:  "DNS"
date:   2019-02-21 15:02:11 +0300
categories: networking dns
---

NOTIFY в pdns только AXFR, IXFR пока есть только на слейвах

Статья больше похоже на brain dump — отрывочные сведения по настройке DNS серверов.
— иметь свой собственный DNS можно даже дома. Если нет сервера или подходящего маршрутизатора, то его можно поднять на raspberry Pi. Одно из применений дома — резать рекламу и well know bad domains, например с использованием RPZ;
— держать открытый рекурсивный DNS сервис в интернет — плохо и для большинства случаев это не нужно;
— не упомянуты ACL на уровне DNS. В особенности для bind это важно, когда один сервер является авторитативным и рекурсивным;
— запросы ANY бывают полезны для админов и лучше делать rate limit на них, чем совсем резать;
— rate limit можно настраивать на уровне DNS (в частности в bind


Чтобы мир стал чище, нужно повсеместно применять bcp38 и очень желательно закрывать открытые рекурсивные DNS у обычных пользователей.
Запросы ANY на авторитативных серверах, если они не возвращают больших ответов (нет DNSSEC) в основном безвредны (ибо используют их для Amplification/Reflection).
Запросы ANY для своих клиентов — rate limit. Более одного запроса в секунду обычно не требуется, хотя можно и увеличить интервал.
Для внешних клиентов кэш вообще не должен отвечать (криворукие ISP — можно отнести к разряду клиентов)

Держать открытый рекурсивный DNS в Интернет порой надо, увы. В моем случае, как только мы закрылись от таких запросов снаружи, вылезли две вещи:

У нас похожая схема авторитарных серверов, только у нас нормальная репликация Master/Slave. Ипользовали PowerAdmin, но он в край надоел и при очередной переделке наших NS заменили его на оперовский DNS-ui, который оказался очень даже огонь, хотя немного бажный (пришлось даже несколько issues по пути в их гитхабе открыть). В отличии от PowerAdmin, он не работает с БД pdns напрямую, а имеет отдельную базу и общается с pdns по API. Да и вообще, админка оказалась куда более годная и удобная в использовании.

[https://github.com/ngoduykhanh/PowerDNS-Admin](https://github.com/ngoduykhanh/PowerDNS-Admin)



рекурсивный резолвер DNS сам отправляет запросы к корневому и так далее вниз серверам имён.

 Нерекурсивный dns сервер в данном случае просто говорит - "я не знаю, но спроси у этого сервера". И клиент будет слать ещё один запрос. Понятное дело, что при медленном интернете первый вариант лучше.

[https://habr.com/ru/post/235197/](https://habr.com/ru/post/235197/)





NSD (Name Server Daemon) — сервер DNS с открытым исходным кодом, разработанный компанией NL Net Labs в сотрудничестве с RIPE NCC.
NSD разрабатывался с нуля в качестве только ответственного сервера (то есть, не реализует рекурсивные запросы и кэширование). Одной из целей разработки являлось повышение разнообразия DNS-серверов и, следовательно, повышение устойчивости системы доменных имен к ошибкам в программном обеспечении и атакам на уязвимости.
NSD использует файлы описаний зон (англ.) в стиле BIND и может использовать файлы BIND без изменений. Вся информация компилируется с помощью zonec в двоичный формат (nsd.db) для ускорения загрузки. Также в процессе компиляции могут быть выявлены ошибки синтаксиса, что позволяет исправить их еще до того, как они станут доступны серверу.

Процессы NSD работают от имени непривилегированного пользователя, что позволяет легко поместить его в изолированное окружение (такое, как chroot). Таким образом, даже если в нем обнаружится уязвимость, её использование не позволит скомпрометировать всю систему. 



$TTL        3600
@       IN      SOA     ns1.infoodessa.com. test.7877796.ru. (
                        2014091201       ; serial, todays date + todays serial #
                        7200              ; refresh, seconds
                        540              ; retry, seconds
                        604800              ; expire, seconds
                        86400 )            ; minimum, seconds



Запись ресурса состоит из следующих полей:

    имя (NAME) — доменное имя, к которому привязана или которому «принадлежит» данная ресурсная запись, либо IP адрес. При отсутствии данного поля, запись ресурса наследуется от предыдущей записи.
    Time To Live (TTL) — дословно «время жизни» записи, время хранения записи в кэше DNS (после указанного времени запись удаляется), данное поле может не указываться в индивидуальных записях ресурсов, но тогда оно должно быть указано в начале файла зоны и будет наследоваться всеми записями.
    класс (CLASS) — определяет тип сети, (в 99,99% случаях используется IN (что обозначает — Internet). Данное поле было создано из предположения, что DNS может работать и в других типах сетей, кроме TCP/IP)
    тип (TYPE) — тип записи синтаксис и назначение записи
    данные (DATA) — различная информация, формат и синтаксис которой определяется типом.


При этом, возможно использовать следующие символы:

>     ;   -  Вводит комментарий
    #  -  Также вводит комментарии (только в версии BIND 4.9)
    @  — Имя текущего домена
    ( )    — Позволяют данным занимать несколько строк
    *    — Метасимвол (только в поле имя)




Какие параметры хранятся в SOA-записи

    TTL – время, в течение которого информация будет кешироваться другими DNS-серверами.
    Hostname – контактный адрес лица, который отвечает за администрирование файла зоны.
    Serial number – 32-разрядное число, которое содержит в себе серийный номер файла зоны. Изменяется при каждом обновлении зоны.
    Refresh – время (в секундах) ожидания ответа вторичного DNS перед запросом SOA-записи с первичных серверов. По истечении данного времени вторичный DNS обращается к первичному для получения копии текущей SOA-записи.            Первичный DNS-сервер выполняет этот запрос. Вторичный DNS-сервер сравнивает полученный серийный номер зоны с имеющимся. Если они отличаются, то осуществляется запрос к первичному DNS-серверу на трансфер зоны.

    Retry – если сервер недоступен, то в по истечении времени (в секундах), указанного в данном параметре, сервер повторно попытается синхронизировать информацию с первичных DNS-серверов.

    Expire – время (в секундах), в течение которого вторичный DNS будет пытаться завершить синхронизацию зоны с первичным. Если это время истечет до того, как синхронизация закончится, то зона на вторичном DNS-сервере перестанет обслуживать запросы об этой зоне.

    Minimum TTL – время жизни кэша для негативного ответа на запрос в зонe.



ucarp ?


 

> $TTL 60; 1 minutes - минимально кешировать






Итеративный (он же прямой, он же нерекурсивный) запрос посылает доменное имя DNS серверу и просит вернуть либо IP адрес этого домена, либо имя DNS сервера, авторитативного для этого домена. При этом, сервер DNS не опрашивает другие серверы для получения ответа. Так работают корневые и TLD серверы.

Рекурсивный запрос посылает DNS серверу доменное имя и просит возвратить IP адрес запрошенного домена. При этом сервер может обращаться к другим DNS серверам.

Обратный запрос посылает IP  и просит вернуть доменное имя.






[https://ru.wikipedia.org/wiki/DNS_cache_poisoning](https://ru.wikipedia.org/wiki/DNS_cache_poisoning)



[https://kostikov.co/vnedrenie-dnssec-dlya-vashego-domena](https://kostikov.co/vnedrenie-dnssec-dlya-vashego-domena)
https://cctld.ru/ru/domains/dnssec/implement/user/practice.php
https://doc.ispsystem.ru/index.php/%D0%9D%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0_DNSSEC
https://www.dmosk.ru/miniinstruktions.php?mini=dnssec-bind
https://linux-admins.ru/article.php?id_article=76&article_title=%D0%9D%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0%20DNSSEC%20%D0%BD%D0%B0%20Bind9
https://habr.com/ru/post/120620/





https://my-biz.com.ua/news/28/65/komandy-upravleniya-DNS-serverom-bind-named-rndc-perezagruzka-transfer-zon-sbros-kesha
https://blog.bissquit.com/unix/debian/server-peresylki-na-bind9/
https://tecadmin.net/configure-rndc-for-bind9/  
