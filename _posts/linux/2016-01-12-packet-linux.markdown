---
layout: post
title:  "packet-linux"
date:   2016-01-12 17:26:30 +0300
categories: linux
tags: linux
---

# packet-linux
PKGBUILD. Вот только checkinstall 

checkinstall генерирует пакет посредством перехвата make install.
А PKGBUILD — это инструкция по сборке пакета. Поэтому сгенерировать его нельзя. 

makepkg

dh_make — это такая штука, которая позволяет быстро получить заготовку пакета исходного кода, которой достаточно в 80% случаев. 
Ниже ссылку давали на дебиановкий мануал по сборке пакетов, если интересно узнать, как это идеологически правильно делается, можете ознакомиться.






Вообще, советы ваши несколько неправильные: пакеты из исходников сейчас собираются через dh_make -> debchange -> debuild -> debrelease с минимальным напряжением

www.debian.org/doc/manuals/maint-guide/index.en.html
+4
kekekeks 21 октября 2011 в 12:34 # ↑
Отличный план, Жозе! А теперь вспоминаем, зачем обычно собирают из исходников. Правильно, чтобы изменить что-то в конфигурации сборки. Вам напомнить, какой debian/rules генерит dh_make?

    export DH_OPTIONS
    %:
    dh $@ 

Вы мне предлагаете в статье объяснять, где что и как править, чтобы добавить туда свои опции?
+4
MzMz 21 октября 2011 в 12:40 # ↑
Суть в том, что ничего править не нужно, Хуан!

Тем более файл debian/rules

На этапа dh_auto_build автоматически вызовется make -f Makefile в родительской директории с уже правильно установленной переменной окружения DISTDIR и все файлы соберуться в нужной директории и будут упаковы
+2
kekekeks 21 октября 2011 в 12:46 # ↑
Ладно, не будем спорить из-за того, какие именно 3.5 команды надо копипастить, тем более, что у вы описываете идеологически правильный способ. Для статьи же была выбрана методика, задействующая минимум дополнительных сущностей. 


Откройте для себя силу OpenSuSE Build Service ([https://build.opensuse.org/)](https://build.opensuse.org/)), собирает RPM и DEB пакеты, имеет уже кучу собранных.
Нужно только немного напрячься и почитать man`ы по SPEC файлам ;) 


и чтобы стояла конкретная версия не соответствующая последней.

В дебиане есть такая штука как dpkg --set-selections, с помощью которой можно запретить обновлять пакет без явного на то указания. В других дистрах есть аналоги. Не надо делать грязных хаков в виде make install, курите мануалы по своему пакетному менеджеру.


Пример:
Нужно протестировать новую версию ПО, которого нет в репах, но уже есть у разработчика.
Варианты:
1. Можно поставить его в /opt обычным make install двумя командами и одной удалить.
2. Можно выпендриться с созданием пакета и ставить все в живую систему при этом не имея гарантии что ПО не испоганит существующие настройки. Это займет 3 команды на установку в RPM-подобных и 6-7 в deb, плюс риск порчи данных.

2-й вариант получается пакетный менеджер ради пакетного менеджера.
Т.к. его функции только создадут дополнительные шаги.

Соответственно вопрос: Зачем?
+1
kekekeks 21 октября 2011 в 14:02 # ↑
На «потестировать» я держу отдельное чистое chroot-окружение, поверх которого перед установкой «свежатинки» монтируется временная файлуха через aufs. Быстро поднимается, нет риска порчи данных. 



И все таки рекомендую почитать доку по LFS и GNU configure and build system.
Там еще очень много интересного :) 

К ТС: судя по всему вы о опции --prefix не читали и о назначении директорий /opt и /usr/local понятия не имеете. Лучше сначала разберитесь толково в архитектуре POSIX-совместимых ОС, а потом уже советуйте.
К читателям: почитайте «Введение в POSIX'ивизм.»© Алексей Федорчук, 2005 — там эта тема правильно и красиво расписана в Главе 10


Точнее в «debian/» лежат ресурсы для файлов
а в в «DEBIAN/» лежат бинарные файлы 


Молодой человек, большинство шаред хостингов могут вам предоставить на одним и том же сервере php 5.2 и 5.3 одновременно.

Более того, при желании сюда можно воткнуть еще и пых четвертой ветки, для особых извращений.
0
kekekeks 21 октября 2011 в 18:45 # ↑
Выставить префиксом /opt/newphp, далее по инструкции. После чего сами разбираетесь с тем, как и куда его прописать, чтобы веб-сервер увидел. 






В Gentoo можно использовать слоты и переключаться между версиями при необходимости.

Удобно бывает. 

[http://en.opensuse.org/openSUSE:Build_Service](http://en.opensuse.org/openSUSE:Build_Service)

кукав

